{"ast":null,"code":"import { loginFailure, loginStart, loginSucess } from \"./userRedux\";\nimport { publicRequest } from \"../requestMethod\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSucess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    // const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    // update\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};","map":{"version":3,"sources":["/home/robin/code/ECOMMERCE PROJECT/Admin/src/Redux/apiCalls.js"],"names":["loginFailure","loginStart","loginSucess","publicRequest","login","dispatch","user","res","post","data","err","getProducts","getProductStart","get","getProductSuccess","getProductFailure","deleteProduct","id","deleteProductStart","deleteProductSuccess","deleteProductFailure","updateProduct","product","updateProductStart","updateProductSuccess","updateProductFailure","addProduct","addProductStart","userRequest","addProductSuccess","addProductFailure"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,WAAnC,QAAsD,aAAtD;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,KAAK,GAAE,OAAMC,QAAN,EAAeC,IAAf,KAAsB;AACtCD,EAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;;AACA,MAAG;AACA,UAAMM,GAAG,GAAE,MAAMJ,aAAa,CAACK,IAAd,CAAmB,aAAnB,EAAiCF,IAAjC,CAAjB;AACAD,IAAAA,QAAQ,CAACH,WAAW,CAACK,GAAG,CAACE,IAAL,CAAZ,CAAR;AACF,GAHD,CAGC,OAAMC,GAAN,EAAU;AACRL,IAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR;AACF;AACJ,CARM;AASP,OAAO,MAAMW,WAAW,GAAG,MAAON,QAAP,IAAoB;AAC5CA,EAAAA,QAAQ,CAACO,eAAe,EAAhB,CAAR;;AACA,MAAI;AACF,UAAML,GAAG,GAAG,MAAMJ,aAAa,CAACU,GAAd,CAAkB,WAAlB,CAAlB;AACAR,IAAAA,QAAQ,CAACS,iBAAiB,CAACP,GAAG,CAACE,IAAL,CAAlB,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACU,iBAAiB,EAAlB,CAAR;AACD;AACF,CARK;AAUN,OAAO,MAAMC,aAAa,GAAG,OAAOC,EAAP,EAAWZ,QAAX,KAAwB;AACnDA,EAAAA,QAAQ,CAACa,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACF;AACAb,IAAAA,QAAQ,CAACc,oBAAoB,CAACF,EAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOP,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACe,oBAAoB,EAArB,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMC,aAAa,GAAG,OAAOJ,EAAP,EAAWK,OAAX,EAAoBjB,QAApB,KAAiC;AAC5DA,EAAAA,QAAQ,CAACkB,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACF;AACAlB,IAAAA,QAAQ,CAACmB,oBAAoB,CAAC;AAAEP,MAAAA,EAAF;AAAMK,MAAAA;AAAN,KAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOZ,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACoB,oBAAoB,EAArB,CAAR;AACD;AACF,CARM;AASP,OAAO,MAAMC,UAAU,GAAG,OAAOJ,OAAP,EAAgBjB,QAAhB,KAA6B;AACrDA,EAAAA,QAAQ,CAACsB,eAAe,EAAhB,CAAR;;AACA,MAAI;AACF,UAAMpB,GAAG,GAAG,MAAMqB,WAAW,CAACpB,IAAZ,CAAkB,WAAlB,EAA8Bc,OAA9B,CAAlB;AACAjB,IAAAA,QAAQ,CAACwB,iBAAiB,CAACtB,GAAG,CAACE,IAAL,CAAlB,CAAR;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACyB,iBAAiB,EAAlB,CAAR;AACD;AACF,CARM","sourcesContent":["import { loginFailure, loginStart, loginSucess } from \"./userRedux\"\nimport {publicRequest} from \"../requestMethod\"\n\nexport const login =async(dispatch,user)=>{\n    dispatch(loginStart())\n    try{\n       const res= await publicRequest.post(\"/auth/login\",user)\n       dispatch(loginSucess(res.data))\n    }catch(err){\n       dispatch(loginFailure())\n    }\n}\nexport const getProducts = async (dispatch) => {\n   dispatch(getProductStart());\n   try {\n     const res = await publicRequest.get(\"/products\");\n     dispatch(getProductSuccess(res.data));\n   } catch (err) {\n     dispatch(getProductFailure());\n   }\n };\n \n export const deleteProduct = async (id, dispatch) => {\n   dispatch(deleteProductStart());\n   try {\n     // const res = await userRequest.delete(`/products/${id}`);\n     dispatch(deleteProductSuccess(id));\n   } catch (err) {\n     dispatch(deleteProductFailure());\n   }\n };\n \n export const updateProduct = async (id, product, dispatch) => {\n   dispatch(updateProductStart());\n   try {\n     // update\n     dispatch(updateProductSuccess({ id, product }));\n   } catch (err) {\n     dispatch(updateProductFailure());\n   }\n };\n export const addProduct = async (product, dispatch) => {\n   dispatch(addProductStart());\n   try {\n     const res = await userRequest.post(`/products`, product);\n     dispatch(addProductSuccess(res.data));\n   } catch (err) {\n     dispatch(addProductFailure());\n   }\n };"]},"metadata":{},"sourceType":"module"}